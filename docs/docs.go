// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/customers": {
            "get": {
                "description": "Returns full list of existing customers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "list-customers"
                ],
                "summary": "Get list of customers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "first name search",
                        "name": "firstName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "last name search",
                        "name": "lastName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Customer"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create customer object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create-customer"
                ],
                "summary": "Create customer",
                "parameters": [
                    {
                        "description": "Customer details",
                        "name": "customerDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/database.Customer"
                        }
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/customers/{customerID}": {
            "get": {
                "description": "Returns customer details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get-customer"
                ],
                "summary": "Get customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Customer"
                        }
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit customer details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "edit-customer"
                ],
                "summary": "Edit customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New customer details",
                        "name": "customerDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.EditCustomerDetailsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Customer"
                        }
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete customer details and it's relations by ID",
                "tags": [
                    "delete-customer"
                ],
                "summary": "Delete customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/customers/{customerID}/purchases": {
            "get": {
                "description": "Returns full list of purchases for a specific customer by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get-customer-purchases"
                ],
                "summary": "Get list of purchases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Purchase"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new purchase for a customer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create-customer-purchase"
                ],
                "summary": "Create a purchase for a customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Purchase details",
                        "name": "purchaseDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.CreatePurchaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Purchase"
                        }
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/customers/{customerID}/purchases/{purchaseID}": {
            "put": {
                "description": "Updates a purchase for a customer by ID",
                "tags": [
                    "update-customer-purchase"
                ],
                "summary": "Update a purchase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Purchase ID",
                        "name": "purchaseID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New purchase details",
                        "name": "customerDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.EditPurchaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Purchase"
                        }
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a purchase by ID",
                "tags": [
                    "delete-customer-purchase"
                ],
                "summary": "Delete a purchase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Purchase ID",
                        "name": "purchaseID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/customers/{customerID}/repairs": {
            "get": {
                "description": "Returns full list of repairs for a specific customer by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get-customer-repairs"
                ],
                "summary": "Get list of repairs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Repair"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new repair for a customer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create-customer-repair"
                ],
                "summary": "Create a repair for a customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Repair details",
                        "name": "repairDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.CreateRepairRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Repair"
                        }
                    },
                    "400": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "IMPLEMENTED BUT DOCS TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Customer": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "telephone_number"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "telephone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.Purchase": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "frame_model": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lens_power": {
                    "type": "string"
                },
                "lens_type": {
                    "type": "string"
                },
                "pd": {
                    "type": "string"
                },
                "purchase_type": {
                    "type": "string"
                },
                "purchased_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.Repair": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reported_at": {
                    "type": "string"
                }
            }
        },
        "server.CreateCustomerRequest": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "telephone_number"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "telephone_number": {
                    "type": "string"
                }
            }
        },
        "server.CreatePurchaseRequest": {
            "type": "object",
            "required": [
                "frame_model",
                "lens_power",
                "lens_type",
                "pd",
                "purchase_type",
                "purchased_at"
            ],
            "properties": {
                "frame_model": {
                    "type": "string"
                },
                "lens_power": {
                    "type": "string"
                },
                "lens_type": {
                    "type": "string"
                },
                "pd": {
                    "type": "string"
                },
                "purchase_type": {
                    "type": "string"
                },
                "purchased_at": {
                    "description": "TODO - when invalid date specified it returns field is required",
                    "type": "string"
                }
            }
        },
        "server.CreateRepairRequest": {
            "type": "object",
            "required": [
                "cost",
                "description",
                "reported_at"
            ],
            "properties": {
                "cost": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "reported_at": {
                    "description": "TODO - when invalid date specified it returns field is required",
                    "type": "string"
                }
            }
        },
        "server.EditCustomerDetailsRequest": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "telephone_number"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "telephone_number": {
                    "type": "string"
                }
            }
        },
        "server.EditPurchaseRequest": {
            "type": "object",
            "required": [
                "frame_model",
                "lens_power",
                "lens_type",
                "pd",
                "purchase_type",
                "purchased_at"
            ],
            "properties": {
                "frame_model": {
                    "type": "string"
                },
                "lens_power": {
                    "type": "string"
                },
                "lens_type": {
                    "type": "string"
                },
                "pd": {
                    "type": "string"
                },
                "purchase_type": {
                    "type": "string"
                },
                "purchased_at": {
                    "description": "TODO - when invalid date specified it returns field is required",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
